FIRRTL version 3.3.0
circuit TopModule :
  module InnerModule : @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 10:7]
    input clock : Clock @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 10:7]
    input reset : Reset @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 10:7]
    output io : { flip sel : UInt<1>, flip inputA : UInt<8>, flip inputB : UInt<8>, innerOut : UInt<8>} @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 11:14]

    connect io.innerOut, UInt<1>(0h0) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 21:15]
    node _io_innerOut_T = mux(io.sel, io.inputB, io.inputA) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 24:21]
    connect io.innerOut, _io_innerOut_T @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 24:15]

  module MidLevelModule : @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 35:7]
    input clock : Clock @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 35:7]
    input reset : Reset @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 35:7]
    output io : { flip midSel1 : UInt<1>, flip midSel2 : UInt<1>, flip midInA : UInt<8>, flip midInB : UInt<8>, flip midInC : UInt<8>, flip midInD : UInt<8>, midOut : UInt<8>} @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 36:14]

    connect io.midOut, UInt<1>(0h0) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 47:13]
    inst inner of InnerModule @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 50:21]
    connect inner.clock, clock
    connect inner.reset, reset
    connect inner.io.sel, io.midSel2 @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 53:16]
    connect inner.io.inputA, io.midInC @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 54:19]
    connect inner.io.inputB, io.midInD @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 55:19]
    node _io_midOut_T = mux(io.midSel2, io.midInB, io.midInA) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 64:8]
    node _io_midOut_T_1 = mux(io.midSel1, inner.io.innerOut, _io_midOut_T) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 59:19]
    connect io.midOut, _io_midOut_T_1 @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 59:13]

  module TopModule : @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 72:7]
    input clock : Clock @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 72:7]
    input reset : UInt<1> @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 72:7]
    output io : { flip topSel1 : UInt<2>, flip topSel2 : UInt<2>, flip topSel3 : UInt<1>, flip dataIn1 : UInt<8>, flip dataIn2 : UInt<8>, flip dataIn3 : UInt<8>, flip dataIn4 : UInt<8>, flip dataIn5 : UInt<8>, flip dataIn6 : UInt<8>, finalOut : UInt<8>} @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 73:14]

    connect io.finalOut, UInt<8>(0h0) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 93:15]
    inst mid of MidLevelModule @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 96:19]
    connect mid.clock, clock
    connect mid.reset, reset
    node _mid_io_midSel1_T = bits(io.topSel1, 0, 0) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 100:31]
    connect mid.io.midSel1, _mid_io_midSel1_T @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 100:18]
    connect mid.io.midSel2, io.topSel3 @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 101:18]
    connect mid.io.midInA, io.dataIn1 @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 102:17]
    connect mid.io.midInB, io.dataIn2 @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 103:17]
    connect mid.io.midInC, io.dataIn3 @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 104:17]
    connect mid.io.midInD, io.dataIn4 @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 105:17]
    node _io_finalOut_T = bits(io.topSel1, 1, 1) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 110:15]
    wire io_finalOut_switchResult : UInt<8> @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 117:37]
    connect io_finalOut_switchResult, UInt<8>(0h0) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 117:37]
    node _io_finalOut_T_1 = eq(UInt<1>(0h0), io.topSel2) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 120:26]
    when _io_finalOut_T_1 : @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 120:26]
      node _io_finalOut_T_2 = eq(UInt<1>(0h0), io.topSel3) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 123:37]
      when _io_finalOut_T_2 : @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 123:37]
        connect io_finalOut_switchResult, io.dataIn1 @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 124:36]
      else :
        node _io_finalOut_T_3 = eq(UInt<1>(0h1), io.topSel3) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 123:37]
        when _io_finalOut_T_3 : @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 123:37]
          connect io_finalOut_switchResult, io.dataIn2 @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 125:36]
    else :
      node _io_finalOut_T_4 = eq(UInt<1>(0h1), io.topSel2) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 120:26]
      when _io_finalOut_T_4 : @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 120:26]
        node _io_finalOut_switchResult_T = mux(io.topSel3, io.dataIn4, io.dataIn3) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 130:30]
        connect io_finalOut_switchResult, _io_finalOut_switchResult_T @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 130:24]
      else :
        node _io_finalOut_T_5 = eq(UInt<2>(0h2), io.topSel2) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 120:26]
        when _io_finalOut_T_5 : @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 120:26]
          node _io_finalOut_switchResult_T_1 = bits(io.topSel1, 0, 0) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 136:27]
          node _io_finalOut_switchResult_T_2 = mux(_io_finalOut_switchResult_T_1, io.dataIn6, io.dataIn5) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 136:16]
          node _io_finalOut_switchResult_T_3 = mux(io.topSel3, _io_finalOut_switchResult_T_2, io.dataIn1) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 134:30]
          connect io_finalOut_switchResult, _io_finalOut_switchResult_T_3 @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 134:24]
    node _io_finalOut_T_6 = mux(_io_finalOut_T, mid.io.midOut, io_finalOut_switchResult) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 109:21]
    connect io.finalOut, _io_finalOut_T_6 @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule3.scala 109:15]
