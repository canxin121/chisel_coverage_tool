FIRRTL version 3.3.0
circuit SimpleFsm :
  module SimpleFsm : @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 21:7]
    input clock : Clock @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 21:7]
    input reset : UInt<1> @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 21:7]
    output io : { flip start : UInt<1>, flip dataIn : UInt<8>, busy : UInt<1>, dataOut : UInt<8>, done : UInt<1>} @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 22:14]

    regreset currentState : UInt<2>, clock, reset, UInt<1>(0h0) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 28:29]
    regreset counter : UInt<4>, clock, reset, UInt<4>(0h0) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 31:24]
    node _io_busy_T = neq(currentState, UInt<1>(0h0)) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 36:28]
    connect io.busy, _io_busy_T @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 36:11]
    connect io.done, UInt<1>(0h0) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 37:11]
    connect io.dataOut, UInt<1>(0h0) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 38:14]
    wire nextState : UInt<2> @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 42:30]
    connect nextState, currentState @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 42:30]
    node _T = asUInt(UInt<1>(0h0)) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 46:24]
    node _T_1 = asUInt(currentState) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 46:24]
    node _T_2 = eq(_T, _T_1) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 46:24]
    when _T_2 : @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 46:24]
      when io.start : @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 49:22]
        connect nextState, UInt<1>(0h1) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 50:19]
        connect counter, UInt<1>(0h0) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 51:17]
    else :
      node _T_3 = asUInt(UInt<1>(0h1)) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 46:24]
      node _T_4 = asUInt(currentState) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 46:24]
      node _T_5 = eq(_T_3, _T_4) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 46:24]
      when _T_5 : @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 46:24]
        node _T_6 = lt(counter, UInt<3>(0h5)) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 57:20]
        when _T_6 : @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 57:41]
          node _counter_T = add(counter, UInt<1>(0h1)) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 58:28]
          node _counter_T_1 = tail(_counter_T, 1) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 58:28]
          connect counter, _counter_T_1 @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 58:17]
          connect nextState, UInt<1>(0h1) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 59:19]
        else :
          connect nextState, UInt<2>(0h2) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 62:19]
          connect counter, UInt<1>(0h0) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 63:17]
      else :
        node _T_7 = asUInt(UInt<2>(0h2)) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 46:24]
        node _T_8 = asUInt(currentState) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 46:24]
        node _T_9 = eq(_T_7, _T_8) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 46:24]
        when _T_9 : @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 46:24]
          connect nextState, UInt<1>(0h0) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 72:17]
          connect io.done, UInt<1>(0h1) @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 74:15]
    connect currentState, nextState @[D:\\projs\\fuzz\\learn_chisel_phase\\src\\main\\scala\\ExampleModule4.scala 80:16]
